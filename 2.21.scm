(define (square-list items)
	(if (null? items)
		()
		(cons ((lambda (x) (* x x)) (car items)) (square-list (cdr items)))
	)
)
(square-list (list 1 2 3 4 5))

(define (square-list-map items)
	(map (lambda (x) (* x x)) items)
)
(square-list-map (list 1 2 3 4 5))

(define (my-map f items)
	(if (null? items)
		()
		(cons (f (car items)) (my-map f (cdr items)))
	)	
)	
(define (square-list-my-map items)
	(my-map (lambda (x) (* x x)) items)
)
(square-list-my-map (list 1 2 3 4 5))


